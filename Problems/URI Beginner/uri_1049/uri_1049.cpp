#include <iostream>#include <string>#include <algorithm>#include <vector>using namespace std;class Animal {public:	string str;	string kin;	string food;	string name;	Animal();	Animal(string str, string kin, string food, string name);};Animal::Animal() {}Animal::Animal(string str, string kin, string food, string name) {	this->str = str;	this->kin = kin;	this->food = food;	this->name = name;}bool equalAn(Animal &a, Animal *b) {	return a.str == b->str && a.kin == b->kin && a.food == b->food;}#define VER "vertebrado"#define INV "invertebrado"#define AVE "ave"#define MAM "mamifero"#define INS "inseto"#define ANE "anelideo"#define CAR "carnivoro"#define ONI "onivoro"#define HER "herbivoro"#define HEM "hematofago"const vector<Animal *> animals = {new Animal(VER, AVE, CAR, "aguia"), new Animal(VER, AVE, ONI, "pomba"), new Animal(VER, MAM, ONI, "homem"), new Animal(VER, MAM, HER, "vaca"),								new Animal(INV, INS, HEM, "pulga"), new Animal(INV, INS, HER, "lagarta"), new Animal(INV, ANE, HEM, "sanguessuga"), new Animal(INV, ANE, ONI, "minhoca")};int main() {	Animal an;	int i, r;	while (cin >> an.str >> an.kin >> an.food) {		for (i = 0; i < animals.size(); i++) {			if (equalAn(an, animals[i])) {				r = i;				break;			}		}		cout << animals[r]->name << "\n";	}	return 0;}
