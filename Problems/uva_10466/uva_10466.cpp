#include <iostream>#include <cmath>#define EPS 1.0E-9#define PI 3.14159265358979323846using namespace std;class Point {public:	double x, y;	Point(double xv = 0, double yv = 0) : x(xv), y(yv) {}};Point translate(const Point& P, double dx, double dy){    return Point { P.x + dx, P.y + dy };}Point rotate(const Point& P, double angle){    auto x = cos(angle) * P.x - sin(angle) * P.y;    auto y = sin(angle) * P.x + cos(angle) * P.y;    return Point { x, y };}Point rotate(const Point& P, double angle, const Point& C){    auto Q = translate(P, -C.x, -C.y);    Q = rotate(Q, angle);    Q = translate(Q, C.x, C.y);    return Q;}int main() {	Point pos[60], targ;	int rTime[60];	int dist[60];	int T, n, i, a;	double dg;	while (scanf("%d %d", &n, &T) == 2) {		for (i = 0; i < n; i++) {			a = scanf("%d %d", dist+i, rTime+i);		}		for (i = 0; i < n; i++) {			if (i) {				printf(" ");				pos[i].x = pos[i-1].x;				pos[i].y = pos[i-1].y;			} else {				pos[i].x = pos[i].y = 0;			}			pos[i].x += (double) dist[i];			dg = (2.0 * PI)/((double)rTime[i]) * ((double)T);			pos[i] = i ? rotate(pos[i], dg, pos[i-1]) : rotate(pos[i], dg);			printf("%.4lf", hypot(pos[i].x, pos[i].y));		}		printf("\n");	}	return 0;}
