#include <iostream>#include <cmath>#define PI 3.141592653589793#define EPS 1.0E-9using namespace std;class Point {public:    double x, y;    Point(double xv = 0, double yv = 0) : x(xv), y(yv) {}};bool eq(double a, double b) {	return abs(a - b) < EPS;}Point ps[11000];int main() {	int t, n, j, k, a, hits;	bool sim;	Point h, p, s;	scanf("%d", &t);	while (t--) {		scanf("%d", &n);		scanf("%lf %lf", &(ps[0].x), &(ps[0].y));		s.x = ps[0].x;		s.y = ps[0].y;		for (i = 1; i < n; i++) {			scanf("%lf %lf", &(ps[i].x), &(ps[i].y));			s.x += ps[i].x;			s.y += ps[i].y;		}		sim = false;		s.x /= (double)n;		s.y /= (double)n;		if (n == 2) {			sim = true;		} else if (n > 2) {			hits = 0;			for (j = 0; j < n; j++) { // for each point p (except the first one)				for (k = j + 1; k < n; k++) { // for each point q (starting at p, so as to not reflect)					if (eq(ps[j].x - s.x, s.x - ps[k].x) && eq(ps[j].y - s.y, s.y - ps[k].y)) {						hits++;						break;					}				}			}			sim = hits == n/2;		}		printf("%s\n", sim ? "yes" : "no");	}	return 0;}