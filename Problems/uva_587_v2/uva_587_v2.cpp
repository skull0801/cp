#include <bits/stdc++.h>using namespace std;using dd = pair<double, double>;const double d = sqrt(2)/2.0;int main() {	string s;	int cases = 0, m;	dd origin;	dd dirs[8] = {dd(1.0, 0.0), dd(d, d), dd(0.0, 1.0), dd(-d, d), dd(-1.0, 0.0), dd(-d, -d), dd(0.0, -1.0), dd(d, -d)};	vector<string> dirnames = {"E", "NE", "N", "NW", "W", "SW", "S", "SE"};	while (getline(cin, s) && s.compare("END")) {		origin.first = origin.second = 0;		cout << "Map #" << ++cases << "\n";		origin = dd(0, 0);		while(s.size() > 1) {			auto i = s.find(',');			if (i == -1)				i = s.end() - s.begin() - 1;			string s1(s, 0, i), s2;			s.erase(0, i + 1);			istringstream iss(s1);			iss >> m >> s2;			auto j = find(dirnames.begin(), dirnames.end(), s2);			dd v = dirs[j - dirnames.begin()];			origin.first += v.first * m;			origin.second += v.second * m;		}		printf("The treasure is located at (%.3lf,%.3lf).\n", origin.first, origin.second);		printf("The distance to the treasure is %.3lf.\n\n", sqrt((origin.first * origin.first) + (origin.second * origin.second)));	}	return 0;}
